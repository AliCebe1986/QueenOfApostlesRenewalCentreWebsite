// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QueenOfApostlesRenewalCentre.Data;

#nullable disable

namespace QueenOfApostlesRenewalCentre.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250321225924_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("QueenOfApostlesRenewalCentre.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("loyalty")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("QueenOfApostlesRenewalCentre.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuestCount")
                        .HasColumnType("int");

                    b.Property<string>("GuestName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReservationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialRequests")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookingId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("QueenOfApostlesRenewalCentre.Models.ConferenceRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConferenceRooms");
                });

            modelBuilder.Entity("QueenOfApostlesRenewalCentre.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<decimal>("BreakfastCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DinnerCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DirectorsDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IssuedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("LunchCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PremisesUseCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RoomCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("InvoiceId");

                    b.HasIndex("BookingId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("QueenOfApostlesRenewalCentre.Models.News", b =>
                {
                    b.Property<int>("NewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NewsId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("QueenOfApostlesRenewalCentre.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("QueenOfApostlesRenewalCentre.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<bool>("IsReserved")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WithShower")
                        .HasColumnType("bit");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 1",
                            RoomNumber = "1",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 2,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 2",
                            RoomNumber = "2",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 3,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 3",
                            RoomNumber = "3",
                            Type = "Standard",
                            WithShower = false
                        },
                        new
                        {
                            RoomId = 4,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 4",
                            RoomNumber = "4",
                            Type = "Standard",
                            WithShower = false
                        },
                        new
                        {
                            RoomId = 5,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 5",
                            RoomNumber = "5",
                            Type = "Standard",
                            WithShower = false
                        },
                        new
                        {
                            RoomId = 6,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 6",
                            RoomNumber = "6",
                            Type = "Standard",
                            WithShower = false
                        },
                        new
                        {
                            RoomId = 7,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 7",
                            RoomNumber = "7",
                            Type = "Standard",
                            WithShower = false
                        },
                        new
                        {
                            RoomId = 8,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 8",
                            RoomNumber = "8",
                            Type = "Standard",
                            WithShower = false
                        },
                        new
                        {
                            RoomId = 9,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 9",
                            RoomNumber = "9",
                            Type = "Standard",
                            WithShower = false
                        },
                        new
                        {
                            RoomId = 10,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 10",
                            RoomNumber = "10",
                            Type = "Standard",
                            WithShower = false
                        },
                        new
                        {
                            RoomId = 11,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 11",
                            RoomNumber = "11",
                            Type = "Standard",
                            WithShower = false
                        },
                        new
                        {
                            RoomId = 12,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 12",
                            RoomNumber = "12",
                            Type = "Standard",
                            WithShower = false
                        },
                        new
                        {
                            RoomId = 13,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 13",
                            RoomNumber = "13",
                            Type = "Standard",
                            WithShower = false
                        },
                        new
                        {
                            RoomId = 14,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 14",
                            RoomNumber = "14",
                            Type = "Standard",
                            WithShower = false
                        },
                        new
                        {
                            RoomId = 15,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 15",
                            RoomNumber = "15",
                            Type = "Standard",
                            WithShower = false
                        },
                        new
                        {
                            RoomId = 16,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 16",
                            RoomNumber = "16",
                            Type = "Standard",
                            WithShower = false
                        },
                        new
                        {
                            RoomId = 17,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 17",
                            RoomNumber = "17",
                            Type = "Standard",
                            WithShower = false
                        },
                        new
                        {
                            RoomId = 18,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 18",
                            RoomNumber = "18",
                            Type = "Standard",
                            WithShower = false
                        },
                        new
                        {
                            RoomId = 19,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 19",
                            RoomNumber = "19",
                            Type = "Standard",
                            WithShower = false
                        },
                        new
                        {
                            RoomId = 20,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 20",
                            RoomNumber = "20",
                            Type = "Standard",
                            WithShower = false
                        },
                        new
                        {
                            RoomId = 21,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 21",
                            RoomNumber = "21",
                            Type = "Standard",
                            WithShower = false
                        },
                        new
                        {
                            RoomId = 22,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 22",
                            RoomNumber = "22",
                            Type = "Standard",
                            WithShower = false
                        },
                        new
                        {
                            RoomId = 23,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 23",
                            RoomNumber = "23",
                            Type = "Standard",
                            WithShower = false
                        },
                        new
                        {
                            RoomId = 24,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 24",
                            RoomNumber = "24",
                            Type = "Standard",
                            WithShower = false
                        },
                        new
                        {
                            RoomId = 25,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 25",
                            RoomNumber = "25",
                            Type = "Standard",
                            WithShower = false
                        },
                        new
                        {
                            RoomId = 26,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 26",
                            RoomNumber = "26",
                            Type = "Standard",
                            WithShower = false
                        },
                        new
                        {
                            RoomId = 27,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 27",
                            RoomNumber = "27",
                            Type = "Standard",
                            WithShower = false
                        },
                        new
                        {
                            RoomId = 28,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 28",
                            RoomNumber = "28",
                            Type = "Standard",
                            WithShower = false
                        },
                        new
                        {
                            RoomId = 29,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 29",
                            RoomNumber = "29",
                            Type = "Standard",
                            WithShower = false
                        },
                        new
                        {
                            RoomId = 30,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 30",
                            RoomNumber = "30",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 31,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 31",
                            RoomNumber = "31",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 32,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 32",
                            RoomNumber = "32",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 33,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 33",
                            RoomNumber = "33",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 34,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 34",
                            RoomNumber = "34",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 35,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 35",
                            RoomNumber = "35",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 36,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 36",
                            RoomNumber = "36",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 37,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 37",
                            RoomNumber = "37",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 38,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 38",
                            RoomNumber = "38",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 39,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 39",
                            RoomNumber = "39",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 40,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 40",
                            RoomNumber = "40",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 41,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 41",
                            RoomNumber = "41",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 42,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 42",
                            RoomNumber = "42",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 43,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 43",
                            RoomNumber = "43",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 44,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 44",
                            RoomNumber = "44",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 45,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 45",
                            RoomNumber = "45",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 46,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 46",
                            RoomNumber = "46",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 47,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 47",
                            RoomNumber = "47",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 48,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 48",
                            RoomNumber = "48",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 49,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 49",
                            RoomNumber = "49",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 50,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 50",
                            RoomNumber = "50",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 51,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 51",
                            RoomNumber = "51",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 52,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 52",
                            RoomNumber = "52",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 53,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 53",
                            RoomNumber = "53",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 54,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 54",
                            RoomNumber = "54",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 55,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 55",
                            RoomNumber = "55",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 56,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 56",
                            RoomNumber = "56",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 57,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 57",
                            RoomNumber = "57",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 58,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 58",
                            RoomNumber = "58",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 59,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 59",
                            RoomNumber = "59",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 60,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 60",
                            RoomNumber = "60",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 61,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 61",
                            RoomNumber = "61",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 62,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 62",
                            RoomNumber = "62",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 63,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 63",
                            RoomNumber = "63",
                            Type = "Standard",
                            WithShower = true
                        },
                        new
                        {
                            RoomId = 64,
                            Capacity = 2,
                            IsReserved = false,
                            Name = "Room 64",
                            RoomNumber = "64",
                            Type = "Standard",
                            WithShower = true
                        });
                });

            modelBuilder.Entity("QueenOfApostlesRenewalCentre.Models.RoomCleaning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CleanerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CleaningDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CleaningStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomCleanings");
                });

            modelBuilder.Entity("QueenOfApostlesRenewalCentre.Models.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffId");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("QueenOfApostlesRenewalCentre.Models.StaffTask", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskId"));

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StaffId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaskId");

                    b.HasIndex("StaffId");

                    b.ToTable("StaffTasks");
                });

            modelBuilder.Entity("QueenOfApostlesRenewalCentre.Models.WeeklySchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChapelBooking")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoffeeBreakTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MealType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingRoom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfParticipants")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WeeklySchedules");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("QueenOfApostlesRenewalCentre.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("QueenOfApostlesRenewalCentre.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QueenOfApostlesRenewalCentre.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("QueenOfApostlesRenewalCentre.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QueenOfApostlesRenewalCentre.Models.Invoice", b =>
                {
                    b.HasOne("QueenOfApostlesRenewalCentre.Models.Booking", "Booking")
                        .WithMany()
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("QueenOfApostlesRenewalCentre.Models.Payment", b =>
                {
                    b.HasOne("QueenOfApostlesRenewalCentre.Models.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("QueenOfApostlesRenewalCentre.Models.StaffTask", b =>
                {
                    b.HasOne("QueenOfApostlesRenewalCentre.Models.ApplicationUser", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });
#pragma warning restore 612, 618
        }
    }
}
